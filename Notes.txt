VERSION INFO

The program version format is major.minor.build, like 1.20.5.
	Minor: changed when added some significant features.
	Build: changed when fixed bugs between minor versions. Also may have some new features.

To update version info of dll files (Au, Au.Editor, Au.Controls):
	Open global2.cs and edit AssemblyVersion attribute. Single global2.cs is used by all these projects.
	It's important to update Au version info whenever something changed in Au or its dependencies (AuCpp etc).
	Also may need to update year in AssemblyCopyright attribute (it's displayed in About info).
To update version info of the setup file:
	Open the .iss file in Inno Script Studio and edit MyAppVersion.
Also in index.md update version, date, filesize. It is part of the help website.
Also may need to update year in LICENSE.txt.

All significant changes of that version must be documented in Other/DocFX/_doc/changes/vMajor.Minor.md. Do it whenever making changes.


HOW TO RELEASE A NEW VERSION

Review all TODO. Occasionally review SHOULDDO and FUTURE.

May need to test something. Eg some changes could break some main features.
	Also test new and some main features on other OS.

May need to undefine TRACE in some projects. Usually not using TRACE in Release config, but sometimes may use it to test Release speed etc.

May need to delete test code. Or use #if TRACE, like in Tests.cs.
	Review perf and print.

May need to add new OS version to class osVersion. Usually once/year.

Change version info (see above).

Build solution in config Release/AnyCPU. Build in config Release/x86.
	NOTE: use the "Rebuild solution" command, else VS may not update something.

Review menu Help -> About. May need to update beta, C# version, .NET version, used libraries.

Run script "Au docs" just to catch XML documentation errors and test how it works with current C#/.NET/DocFX versions etc.
	Don't upload. Fix errors if need. More info in AuDocs.txt.
	Review the generated local help.

Build solution if needed to edit in above steps.

May need to update some info in README.md for github. Eg the screenshot and "how to build".
	When an image updated, github still shows the old cached. Workaround: in the image link append #x and change x for each image version.

Open the .iss file in Inno Script Studio. Review, compile.
	Run the setup file to test. Test on other OS too. Occasionally uninstall/install, not just upgrade.
	May need to update the setup file size in the download webpage (index.md).

Upload the setup file. For example with FileZilla.
	Backup the old setup file at first: in FileZilla move the old file to the "download" folder and rename (add version).

Run script "Au docs". Click the upload link.

Rename "future.md".

Github commit all and push. The message could be like v1.2.3.

Review web pages. Github too.

Download and test the setup file.
	Occasionally test it on all OS. Observe SmartScreen/antivirus behavior.

Test the setup file at virustotal.com. And separately other files (even data files).
	Always will be several false positives. Even with an empty Inno Setup project. Never mind.

Announce in forum.

Release NuGet package:
	In Au project edit version and maybe year.
		Can edit directly in .csproj.
		Make sure that <TargetFrameworks> contains all supported frameworks.
		Build the project.
	Run script "Create NuGet package.cs". It executes dotnet pack and adds native dlls.
	Upload to NuGet. The script prints links.

Edit version in _\version.txt. Upload to public_html.

If not beta, occasionally may want to review/update in some download websites. Edit and upload the PAD file.


UPDATING .NET

VS must support that .NET version. Install the .NET SDK if need.

Update .NET version in all C# projects except Au.Net4.

In project DatabasesEtc, in file Program.cs:
	Enable only the call to RefTxt.Create, and run.
	Enable only the call to RefAndDoc.Create, and run.
	Also now it's a good time to update icons: update the NuGet package, enable only Icons.CreateDB, and run.
	NOTE: also need this when upgraded SDK RC -> final. Eg in .NET 8 SDK final some API changed.

Update .NET version in the AppHost project (the #define and the download link). Build.

Build solution.

Run editor.

Update MetaComments.Defines.

Test DNuget with the new and the old SDK. Usually it works with both; don't need to edit.

Find-replace ".NET 6" everywhere, including:
- LibreAutomate.iss (Inno Setup).
- Menus.cs (Help -> About).
- README.md (GitHub).

Maybe more.
